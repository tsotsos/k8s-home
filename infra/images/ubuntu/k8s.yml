- name: K8s all hosts
  hosts: default
  become: true
  become_method: ansible.builtin.sudo
  tasks:
    - name: Disabling swap on hosts...
      ansible.builtin.command: swapoff -a
      changed_when: false
    - name: Disabling swap from fstab...
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
    - name: Removing Snapd
      ansible.builtin.package:
        name: snapd
        state: absent
    - name: Ignore snapd in future
      ansible.builtin.command: apt-mark hold snapd
      changed_when: false
    - name: Create an empty file for the Containerd module
      ansible.builtin.copy:
        content: ""
        dest: /etc/modules-load.d/containerd.conf
        mode: '0755'
        force: false
    - name: Configure modules for Containerd
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter
    - name: Create an empty file for Kubernetes sysctl params
      ansible.builtin.copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        mode: '0755'
        force: false
    - name: Configure sysctl params for Kubernetes
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - "net.bridge.bridge-nf-call-iptables  = 1"
        - "net.ipv4.ip_forward                 = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"
    - name: Apply sysctl params without reboot
      ansible.builtin.command: sysctl --system
      changed_when: false
    - name: Install APT Transport HTTPS
      ansible.builtin.apt:
        name: apt-transport-https
        state: present
    - name: Add Docker apt-key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker-apt-keyring.asc
        mode: "0644"
        force: true
    - name: Add Docker's APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }} signed-by=/etc/apt/keyrings/docker-apt-keyring.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: true
    - name: Add Kubernetes apt-key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: "0644"
        force: true
    - name: Add Kubernetes' APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: true
    - name: Install Containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
    - name: Create Containerd directory
      ansible.builtin.file:
        path: /etc/containerd
        mode: "0755"
        state: directory
    - name: Add Containerd configuration
      ansible.builtin.shell: /usr/bin/containerd config default > /etc/containerd/config.toml
      changed_when: false
    - name: Configuring the systemd cgroup driver for Containerd
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: "            SystemdCgroup = false"
        line: "            SystemdCgroup = true"
    - name: Enable the Containerd service and start it
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: true
        daemon-reload: true
    - name: Install Kubelet
      ansible.builtin.package:
        name: kubelet=1.29.*
        state: present
        update_cache: true
    - name: Install Kubeadm
      ansible.builtin.package:
        name: kubeadm=1.29.*
        state: present
    - name: Enable the Kubelet service, and enable it persistently
      ansible.builtin.service:
        name: kubelet
        enabled: true
    - name: Load br_netfilter kernel module
      community.general.system.modprobe:
        name: br_netfilter
        state: present
    - name: Set bridge-nf-call-iptables
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
    - name: Set ip_forward
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 1
